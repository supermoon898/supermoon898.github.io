[{"title":"ABAP基础","url":"/2019/08/12/ABAP/","content":"{{ title }}：ABAP基础开发介绍\n<!-- more -->\n<The rest of contents | 余下全文>\n\n<center>ABAP基础开发</center>\n\n[TOC]\n\n## 一、ABAP开发常用TCODE\n\n| T-CODE |       描述       |                                       说明 |\n| :----- | :--------------: | -----------------------------------------: |\n| SE80   |    对象导航器    |           集合了所有与ABAP开发相关的工作区 |\n| SE38   |    ABAP编辑器    |         创建、修改、查询ABAP程序的开发工具 |\n| SE37   |    函数编辑器    |             创建、修改、查询函数的开发工具 |\n| SE11   |   ABAP数据字典   | 创建如数据表、视图、结构体等对象的开发工具 |\n| SE16   | 数据库数据编辑器 |     创建、修改、查询数据库表数据的开发工具 |\n| SE93   |    维护事务码    |           创建、修改、查询事务码的开发工具 |\n| SE43   |   维护局部菜单   |          创建、修改、查询SAP菜单的开发工具 |\n\n## 二、数据字典\n\n### 1、数据字典对象\n\n```\n- 数据库表 Database Table _[常用]_\n    - 透明表（Transparent Table）：数据库中有对应的物理表\n    - 存储表（Pooled Table）：簇表（Cluster Table）\n- 视图View\n- 数据库视图 Database View _[常用]_\n- 项目视图 Projection View\n- 维护视图 Maintenance View\n- 帮助视图 Help View\n- 数据类型 DataType\n    - 数据元素 Data Element：描述一个字段的用途\n    - 结构 Structure：为若干个字段组合，在数据库不存在数据记录\n    - 表类型 Table Type _[类似数组]_\n- 类型池 Type Group/Type Pool\n- 域Domain：描述一个字段类型和长度等信息\n- 搜索帮助 Search Help\n- 锁对象 Lock Obejct\n```\n\n### 2、数据字典预制常用类型\n\n```\n- CHAR:字符\n- NUMC：数值文本 _[不能参与运算，一般用于邮政编码、电话号码]_\n- QUAN：数值类型 _[数量，需要与单位关联，需要指定对应的UNIT]_\n- UNIT：单位 _[与QUAN成对出现]_\n- CUKY：货币代码 _[人民币、美元，与CURR成对出现]_\n- CURR：货币金额\n- DATS：日期\n- TIMS：时间\n- STRING： 字符串\n```\n\n### 3、数据字典的创建操作，自行查阅\n\n### 4、数据类型及创建\n\n```\n- 全局类型（数据字典中创建的类型） _[所有地方都可以使用]_\n    - Structure\n    - Table Type\n- 标准类型\n    - D：日期类型\n    - I：整型\n    - F 浮点型\n    -STRING：可变长字符串\n- 局部类型（程序中单独声明的类型） _[只能在程序中使用]_\n- Data Type\n- Structure Type\n- Table Type\n```\n\n#### 数据类型\n\n1、基本类型声明格式：\n\n```\nTYPES 类型名 TYPE [基本数据类型|数据元素]. // _[参照基本类型或数据元素创建新类型]_\nTYPES 类型名 LIKE [变量]. // _[参照变量的类型创建新的类型]_ \n```\n\n2、结构体类型的声明格式：\n\n```\nTYPES BEGIN OF 结构类型名.\nEND OF 结构类型名.\n```\n\n3、内表类型的声明格式：\n\n```\nTYPES 内表类型名 TYPE TABLE OF 结构类型 LENGHT n\n                                后缀：  WITH HEADER LINE 带表头行 [后续解释]\n                                        INITIAL SIZE n 初始化大小\n                                        OCCURS n 初始化大小\n```\n\n#### 数据变量\n\n1、基本类型变量\n\n```\nDATA 变量名 TYPE [基本数据类型|数据元素|结构体|内表] //变量名一般是以G开头 GV_HEIGHT、GS_STUDENT、 GT_STUDENT\n//数据类型的分类：\n- 全局类型（SE11）数据元素，结构、内表类型\n- 标准类型（C、N、D、T、F、P、I、STRING）\n- 本地类型（程序中的TYPES）\n```\n\n2、匿名结构体类型定义变量\n\n```\nDATA BEGIN OF 变量名,\n...\nEND OF 变量名\n```\n\n3、匿名内表类型定义变量\n\n```\nDATA 变量名 TYPE TABLE of 结构类型 LENGHT n\n                                后缀：  WITH HEADER LINE 带表头行 [后续解释]\n                                        INITIAL SIZE n 初始化大小\n                                        OCCURS n 初始化大小\n\n```\n\n3、常用系统变量\n    \n\n```\n系统变量会自动赋值。参照内表SYST\nSY-SUBRC：上一个操作是否成功，0：成功\nSY-UNAME：当前用户名\nSY-TCODE：当前事务\nSY-DATUM：当前日期\nSY-UZEIT：当前时间\nSY-REPID：当前程序名\nSY-TABIX：内表中的索引，哈希表中不能使用这个系统变量\n\n```\n\n## 三、基本语法\n\n### 1、基础语法\n\n```\n1）英文句号表示语句结束\n2）代码注释：*行注释，\"右侧注释\n3）字符串使用单引号：''忽略字符串中的空格，``会保留空格\n4）命令使用需要空格隔开\n\n```\n\n### 2、赋值方法\n\n```\n1）等号赋值=\n2）MOVE赋值\n3）WRITE赋值\n\n```\n\n### 内表操作\n\n```\n1) 内表的分类\n    标准表\n    排序表\n    哈希表\n2）内表基础使用\n3）WITH HEADER LINE含义\n4）内表数据的增加\n5）内表数据的修改\n6）内表数据的删除\n7）内表的读取\n\n```\n\n## 四、程序概览\n\n- Report程序：[1类型程序]制作报表，数据列表（DataList）输出 _[使用程序生成界面]_\n- Online程序：[M类型程序] _[专门的GUI绘制界面，强调业务流程]_\n  - 查询数据，录入、修改、删除等\n  - Module Pool程序：以Module Pool形态进行业务流程的逻辑处理\n  - Online程序，强调用Online Transaction来处理业务流程进行过程\n  - Screen程序，主要使用Screen（及屏幕对象），并实现界面间Flow Logic（流逻辑）\n\n## 五、Report程序\n\n### 1、选择界面 SELECTION SCREEN\n\n### 2、选择界面事件\n\n## 六、智能表单 SMART FORM\n\n## 七、ALV\n\n## 八、Online程序\n\n## 九、常用函数\n\n### 1、字符串编码前补0与去0\n\n加上p_in的前导零\n\n```\n CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'\n\n    EXPORTING\n\n      input  = p_in\n\n    IMPORTING\n\n      output = p_in.\n\n```\n\n去除p_out的前导零\n\n```\nCALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'\n\n    EXPORTING\n\n      input  = p_out\n\n    IMPORTING\n\n      output = p_out.\n\n```","tags":["ABAP"],"categories":["algorithm"]},{"title":"Hello World","url":"/2019/08/12/hello-world/","content":"{{ title }}：Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo.\n<!-- more -->\n<The rest of contents | 余下全文>\n\n\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","tags":["ABAP"],"categories":["SAP"]}]